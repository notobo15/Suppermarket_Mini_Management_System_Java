/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.BUS_Product;
import DTO.DTO_Product;
import DTO.DTO_CategoryProduct;
import BUS.BUS_CategoryProduct;
import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
// import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EV
 */
public class ProductGUI extends javax.swing.JFrame {

    /**
     * Creates new form ProductGUI
     */
    public ProductGUI() {
        initComponents();
        try {
            cbbMaLoai();

        } catch (Exception ex) {
            Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            addRowToJTable();
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }   
        btn_themsanpham.setEnabled(true);
        btn_suasanpham.setEnabled(false);
        btn_xoasanpham.setEnabled(false);
        btn_luusanpham.setEnabled(true);
        
    }

    public void addRowToJTable() throws SQLException {
        BUS_Product bus_product = new BUS_Product();
        ArrayList<DTO_Product> list = bus_product.getList();
        DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();
        Object rowData[] = new Object[12];
        for (int i = 0; i < list.size(); i++) {
            System.out.println(list.get(i).getName());
            rowData[0] = list.get(i).getProductId();
            rowData[1] = list.get(i).getName();
            rowData[2] = list.get(i).getDescription();
            rowData[3] = list.get(i).getPrice();
            rowData[4] = list.get(i).getImg();
            rowData[5] = list.get(i).getMass();
            rowData[6] = list.get(i).gettrademark();
            rowData[7] = list.get(i).getCategoryId();
            rowData[8] = list.get(i).getQuantity();
            rowData[9] = list.get(i).isStatus();
            rowData[10] = list.get(i).getExpireDate();
            model.addRow(rowData);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSanPham = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        input_masanpham = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        input_gia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        input_trongluong = new javax.swing.JTextField();
        input_ten = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        input_noiban = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        input_mota = new javax.swing.JTextArea();
        input_soluong = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        input_hinh = new javax.swing.JTextField();
        input_maloai = new javax.swing.JComboBox<>();
        input_hansudung = new com.toedter.calendar.JDateChooser();
        input_tinhtrang = new javax.swing.JComboBox<>();
        btn_themsanpham = new javax.swing.JButton();
        btn_xoasanpham = new javax.swing.JButton();
        btn_resetsanpham = new javax.swing.JButton();
        btn_luusanpham = new javax.swing.JButton();
        btn_suasanpham = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        clockGUI1 = new GUI.Components.ClockGUI();
        header1 = new GUI.Components.Header();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        input_timkiemma = new javax.swing.JTextField();
        input_timkiemten = new javax.swing.JTextField();
        input_timkiemmaloai = new javax.swing.JComboBox<>();
        btn_timkiemsanpham = new javax.swing.JButton();
        btn_huytimkiemsanpham = new javax.swing.JButton();
        input_timkiemtinhtrang = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(141, 169, 196));

        TableSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên", "Mô tả", "Giá", "Hình", "Trọng lượng", "Nơi bán", "Mã loại", "Số lượng", "Tình trạng", "Hạn sử dụng"
            }
        ));
        TableSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableSanPham);

        jPanel6.setBackground(new java.awt.Color(208, 244, 222));

        jPanel7.setBackground(new java.awt.Color(208, 244, 222));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Mã sản phẩm");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Tên");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Mô tả");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Giá");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Tình trạng");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Trọng lượng");

        input_ten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_tenActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Nơi bán");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Mã loại");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Số lượng");

        input_noiban.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_noibanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setText("Thông tin");

        input_mota.setColumns(20);
        input_mota.setRows(5);
        jScrollPane2.setViewportView(input_mota);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel21.setText("Hạn sử dụng");

        jLabel22.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel22.setText("Hình");

        input_maloai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--","1","2"}));
        input_maloai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_maloaiActionPerformed(evt);
            }
        });

        input_tinhtrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "true", "false"}));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(input_ten, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_hinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_masanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(input_hansudung, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_tinhtrang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_soluong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_maloai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_noiban, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_trongluong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input_gia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(input_gia)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addComponent(input_masanpham, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                .addGap(4, 4, 4))
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(input_trongluong, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(input_ten))
                        .addGap(4, 4, 4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(input_noiban)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(input_maloai, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(input_soluong, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(input_tinhtrang, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(input_hansudung, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(53, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(input_hinh)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );

        btn_themsanpham.setBackground(new java.awt.Color(103, 148, 54));
        btn_themsanpham.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_themsanpham.setForeground(new java.awt.Color(255, 255, 255));
        btn_themsanpham.setText("Thêm");
        btn_themsanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themsanphamActionPerformed(evt);
            }
        });

        btn_xoasanpham.setBackground(new java.awt.Color(217, 4, 41));
        btn_xoasanpham.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_xoasanpham.setForeground(new java.awt.Color(255, 255, 255));
        btn_xoasanpham.setText("Xóa");
        btn_xoasanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoasanphamActionPerformed(evt);
            }
        });

        btn_resetsanpham.setBackground(new java.awt.Color(199, 125, 255));
        btn_resetsanpham.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_resetsanpham.setForeground(new java.awt.Color(255, 255, 255));
        btn_resetsanpham.setText("Reset");
        btn_resetsanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetsanphamActionPerformed(evt);
            }
        });

        btn_luusanpham.setBackground(new java.awt.Color(56, 111, 164));
        btn_luusanpham.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_luusanpham.setForeground(new java.awt.Color(255, 255, 255));
        btn_luusanpham.setText("Lưu");
        btn_luusanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_luusanphamActionPerformed(evt);
            }
        });

        btn_suasanpham.setBackground(new java.awt.Color(255, 202, 58));
        btn_suasanpham.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_suasanpham.setForeground(new java.awt.Color(255, 255, 255));
        btn_suasanpham.setText("Sửa");
        btn_suasanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suasanphamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 552, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_themsanpham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_suasanpham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_xoasanpham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_resetsanpham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_luusanpham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(btn_themsanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_suasanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_xoasanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_resetsanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_luusanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel19.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel19.setText("Hàng hóa");

        jPanel3.setBackground(new java.awt.Color(241, 192, 232));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setText("Tìm kiếm");

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Mã sản phẩm");

        jLabel14.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel14.setText("Tên sản phẩm");

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Mã loại");

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Tình trạng");

        input_timkiemten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_timkiemtenActionPerformed(evt);
            }
        });

        input_timkiemmaloai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btn_timkiemsanpham.setBackground(new java.awt.Color(103, 148, 54));
        btn_timkiemsanpham.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_timkiemsanpham.setForeground(new java.awt.Color(255, 255, 255));
        btn_timkiemsanpham.setText("Tìm kiếm");
        btn_timkiemsanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timkiemsanphamActionPerformed(evt);
            }
        });

        btn_huytimkiemsanpham.setBackground(new java.awt.Color(217, 4, 41));
        btn_huytimkiemsanpham.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_huytimkiemsanpham.setForeground(new java.awt.Color(255, 255, 255));
        btn_huytimkiemsanpham.setText("Hủy tìm kiếm");
        btn_huytimkiemsanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_huytimkiemsanphamActionPerformed(evt);
            }
        });

        input_timkiemtinhtrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "true", "false"}));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(input_timkiemten, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(input_timkiemma, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(input_timkiemmaloai, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_huytimkiemsanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_timkiemsanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(input_timkiemtinhtrang, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(input_timkiemma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(input_timkiemten))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(input_timkiemmaloai))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(input_timkiemtinhtrang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_timkiemsanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_huytimkiemsanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header1, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(321, 321, 321)
                        .addComponent(clockGUI1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(clockGUI1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_timkiemsanphamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timkiemsanphamActionPerformed
        // TODO add your handling code here:
        BUS_Product tmp = new BUS_Product();

        if (!input_timkiemma.getText().equals("")) {
            try {
                DefaultTableModel modeld = (DefaultTableModel) TableSanPham.getModel();
                modeld.setRowCount(0);
              
                ArrayList<DTO_Product> list = tmp.getList();
                int searchNumb = Integer.parseInt(input_timkiemma.getText());
                DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();
                Object rowData[] = new Object[12];
                tmp.getSingleById(searchNumb);
                for (int i = 0; i < list.size(); i++) {
                    if (list.get(i).getProductId() == searchNumb) {
                        System.out.println(list.get(i).getName());
                        rowData[0] = list.get(i).getProductId();
                        rowData[1] = list.get(i).getName();
                        rowData[2] = list.get(i).getDescription();
                        rowData[3] = list.get(i).getPrice();
                        rowData[4] = list.get(i).getImg();
                        rowData[5] = list.get(i).getMass();
                        rowData[6] = list.get(i).gettrademark();
                        rowData[7] = list.get(i).getCategoryId();
                        rowData[8] = list.get(i).getQuantity();
                        rowData[9] = list.get(i).isStatus();
                        rowData[10] = list.get(i).getExpireDate();
                        model.addRow(rowData);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

        }

        if (!input_timkiemten.getText().equals("")) {
            try {
                DefaultTableModel modeld = (DefaultTableModel) TableSanPham.getModel();
                modeld.setRowCount(0);
             
                ArrayList<DTO_Product> list = tmp.getList();
                String search = input_timkiemten.getText();
                DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();
                Object rowData[] = new Object[12];
                for (int i = 0; i < list.size(); i++) {
                    if (list.get(i).getName().contains(search)) {
                        rowData[0] = list.get(i).getProductId();
                        rowData[1] = list.get(i).getName();
                        rowData[2] = list.get(i).getDescription();
                        rowData[3] = list.get(i).getPrice();
                        rowData[4] = list.get(i).getImg();
                        rowData[5] = list.get(i).getMass();
                        rowData[6] = list.get(i).gettrademark();
                        rowData[7] = list.get(i).getCategoryId();
                        rowData[8] = list.get(i).getQuantity();
                        rowData[9] = list.get(i).isStatus();
                        rowData[10] = list.get(i).getExpireDate();
                        model.addRow(rowData);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

        }

        if (!input_timkiemmaloai.getSelectedItem().equals("--Select--")) {
            try {
                DefaultTableModel modeld = (DefaultTableModel) TableSanPham.getModel();
                modeld.setRowCount(0);
              
                ArrayList<DTO_Product> list = tmp.getList();
                int searchMaLoai = Integer.parseInt(input_timkiemmaloai.getSelectedItem().toString());
                DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();
                Object rowData[] = new Object[12];
                for (int i = 0; i < list.size(); i++) {
                    if (list.get(i).getCategoryId() == searchMaLoai) {
                        rowData[0] = list.get(i).getProductId();
                        rowData[1] = list.get(i).getName();
                        rowData[2] = list.get(i).getDescription();
                        rowData[3] = list.get(i).getPrice();
                        rowData[4] = list.get(i).getImg();
                        rowData[5] = list.get(i).getMass();
                        rowData[6] = list.get(i).gettrademark();
                        rowData[7] = list.get(i).getCategoryId();
                        rowData[8] = list.get(i).getQuantity();
                        rowData[9] = list.get(i).isStatus();
                        rowData[10] = list.get(i).getExpireDate();
                        model.addRow(rowData);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

        }

        if (!input_timkiemtinhtrang.getSelectedItem().equals("--Select--")) {
            try {
                DefaultTableModel modeld = (DefaultTableModel) TableSanPham.getModel();
                modeld.setRowCount(0);
               
                ArrayList<DTO_Product> list = tmp.getList();
                Boolean searchStatus = Boolean.parseBoolean(input_timkiemtinhtrang.getSelectedItem().toString());
                DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();

                Object rowData[] = new Object[12];
                for (int i = 0; i < list.size(); i++) {
//                 System.out.println(list.get(i).isStatus());
                    if (list.get(i).isStatus() == searchStatus) {
                        rowData[0] = list.get(i).getProductId();
                        rowData[1] = list.get(i).getName();
                        rowData[2] = list.get(i).getDescription();
                        rowData[3] = list.get(i).getPrice();
                        rowData[4] = list.get(i).getImg();
                        rowData[5] = list.get(i).getMass();
                        rowData[6] = list.get(i).gettrademark();
                        rowData[7] = list.get(i).getCategoryId();
                        rowData[8] = list.get(i).getQuantity();
                        rowData[9] = list.get(i).isStatus();
                        rowData[10] = list.get(i).getExpireDate();
                        model.addRow(rowData);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

        }
    }//GEN-LAST:event_btn_timkiemsanphamActionPerformed

    private void btn_xoasanphamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_xoasanphamActionPerformed
        // TODO add your handling code here:

        BUS_Product tmp = new BUS_Product();
        int i = TableSanPham.getSelectedRow();
        int id = (int) TableSanPham.getModel().getValueAt(i, 0);
        try {
            tmp.delete(id);
        } catch (SQLException ex) {
            Logger.getLogger(AccountGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(rootPane, "ban vua click");
    }// GEN-LAST:event_btn_xoasanphamActionPerformed

    private void btn_suasanphamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_suasanphamActionPerformed
        // TODO add your handling code here:

        DTO_Product pro = new DTO_Product();
        BUS_Product tmp = new BUS_Product();
        int a = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn sửa chứ!!");

        if (a == JOptionPane.YES_OPTION) {
            pro.setProductId(Integer.parseInt(input_masanpham.getText()));
            pro.setName(input_ten.getText());
            pro.setDescription(input_mota.getText());
            pro.setPrice(Float.parseFloat(input_gia.getText()));
            pro.setImg(input_hinh.getText());
            pro.setMass(input_trongluong.getText());
            pro.settrademark(input_noiban.getText());       
            pro.setCategoryId(Integer.parseInt((String)input_maloai.getSelectedItem()));
            pro.setQuantity(Float.parseFloat(input_soluong.getText()));
            
            pro.setStatus(Boolean.parseBoolean((String)input_tinhtrang.getSelectedItem()));

            String temp = new SimpleDateFormat("yyyy-MM-dd").format(input_hansudung.getDate());
            pro.setExpireDate(temp);

            try {
                tmp.update(pro);
            } catch (Exception ex) {
                Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }// GEN-LAST:event_btn_suasanphamActionPerformed

    private void btn_resetsanphamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_resetsanphamActionPerformed
        // TODO add your handling code here:

        input_masanpham.setText("");
        input_ten.setText("");
        input_mota.setText("");
        input_gia.setText("");
        input_hinh.setText("");
        input_trongluong.setText("");
        input_noiban.setText("");
        input_maloai.setSelectedIndex(0);
        input_soluong.setText("");
        input_tinhtrang.setSelectedIndex(0);

        Date date;

        try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse("2000-01-01");
            input_hansudung.setDate(date);

        } catch (ParseException ex) {
            Logger.getLogger(AccountGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        btn_themsanpham.setEnabled(true);
        btn_suasanpham.setEnabled(false);
        btn_xoasanpham.setEnabled(false);
        btn_luusanpham.setEnabled(true);

    }// GEN-LAST:event_btn_resetsanphamActionPerformed

    private void btn_themsanphamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_themsanphamActionPerformed
        // TODO add your handling code here:

        DTO_Product pro = new DTO_Product();
        BUS_Product tmp = new BUS_Product();

        int a = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn them chứ!!");

        if (a == JOptionPane.YES_OPTION) {

            pro.setProductId(Integer.parseInt(input_masanpham.getText()));
            pro.setName(input_ten.getText());
            pro.setDescription(input_mota.getText());
            if (input_gia.getText().equals("")) {
                input_gia.setText("0");
            }
            pro.setPrice(Float.parseFloat(input_gia.getText()));
            pro.setImg(input_hinh.getText());
            pro.setMass(input_trongluong.getText());
            pro.settrademark(input_noiban.getText());

            pro.setCategoryId(Integer.parseInt(input_maloai.getSelectedItem().toString()));

            if (input_soluong.getText().equals("")) {
                input_soluong.setText("0");
            }
            pro.setQuantity(Float.parseFloat(input_soluong.getText()));
            pro.setStatus(Boolean.parseBoolean(input_tinhtrang.getSelectedItem().toString()));

            String temp = new SimpleDateFormat("yyyy-MM-dd").format(input_hansudung.getDate());
            pro.setExpireDate(temp);

            try {              
                tmp.getList();       
            } catch (Exception ex) {
                Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                tmp.add(pro);
            } catch (Exception ex) {
                Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }// GEN-LAST:event_btn_themsanphamActionPerformed

    private void btn_luusanphamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_luusanphamActionPerformed
        // TODO add your handling code here:

        try {
            DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();
            model.setRowCount(0);
            addRowToJTable();
        } catch (SQLException ex) {
            Logger.getLogger(AccountGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }// GEN-LAST:event_btn_luusanphamActionPerformed

    private void input_noibanActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_input_noibanActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_input_noibanActionPerformed

    private void input_tenActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_input_tenActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_input_tenActionPerformed

    private void input_timkiemtenActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_input_timkiemtenActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_input_timkiemtenActionPerformed

    private void btn_huytimkiemsanphamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_huytimkiemsanphamActionPerformed
        // TODO add your handling code here:
        BUS_Product tmp = new BUS_Product();
        try {
            tmp.getList();
            DefaultTableModel modeld = (DefaultTableModel) TableSanPham.getModel();
            modeld.setRowCount(0);
            addRowToJTable();
        } catch (Exception ex) {
            Logger.getLogger(ProductGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        input_timkiemma.setText("");
        input_timkiemten.setText("");
        input_timkiemmaloai.setSelectedIndex(0);
        input_timkiemtinhtrang.setSelectedIndex(0);

    }// GEN-LAST:event_btn_huytimkiemsanphamActionPerformed

    private void input_maloaiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_input_maloaiActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_input_maloaiActionPerformed

    private void TableSanPhamMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_TableSanPhamMouseClicked
        // TODO add your handling code here:
        int i = TableSanPham.getSelectedRow();
        System.out.println(i);

        input_masanpham.setText(TableSanPham.getModel().getValueAt(i, 0).toString());
        input_ten.setText(TableSanPham.getModel().getValueAt(i, 1).toString());
        input_mota.setText(TableSanPham.getModel().getValueAt(i, 2).toString());
        input_gia.setText(TableSanPham.getModel().getValueAt(i, 3).toString());
        input_hinh.setText(TableSanPham.getModel().getValueAt(i, 4).toString());
        input_trongluong.setText(TableSanPham.getModel().getValueAt(i, 5).toString());
        input_noiban.setText(TableSanPham.getModel().getValueAt(i, 6).toString());
        input_maloai.setSelectedItem(TableSanPham.getModel().getValueAt(i, 7));
        input_soluong.setText(TableSanPham.getModel().getValueAt(i, 8).toString());
        input_tinhtrang.setSelectedItem(TableSanPham.getModel().getValueAt(i, 9));

        Date date;

        try {
            System.out.println("birst date :" + TableSanPham.getModel().getValueAt(i, 10).toString());
            date = new SimpleDateFormat("yyyy-MM-dd").parse(TableSanPham.getModel().getValueAt(i, 10).toString());
            input_hansudung.setDate(date);

        } catch (ParseException ex) {
            Logger.getLogger(AccountGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        
        btn_themsanpham.setEnabled(false);
        btn_suasanpham.setEnabled(true);
        btn_xoasanpham.setEnabled(true);
        btn_luusanpham.setEnabled(true);
        
    }// GEN-LAST:event_TableSanPhamMouseClicked

    public void cbbMaLoai() throws Exception {
        DTO_CategoryProduct pro = new DTO_CategoryProduct();
        BUS_CategoryProduct tmp = new BUS_CategoryProduct();
        ArrayList<DTO_CategoryProduct> list = tmp.getList();
        String[] array = new String[list.size()];

        String[] listCI;
        String ar = null;
        for (int i = 0; i < array.length; i++) {
            array[i] = Integer.toString(list.get(i).getId());
            String[] array1 = {"--Select--"};
            String[] result = Arrays.copyOf(array1, array1.length + array.length);
            System.arraycopy(array, 0, result, array1.length, array.length);
            ar = Arrays.toString(result).substring(1);
            ar = ar.substring(0, ar.length() - 1);
        }

        listCI = ar.split(", ");

//        int[] numbers = new int[listCI.length];
//        for (int i = 1; i < listCI.length; i++) {
//            numbers[i] = Integer.parseInt(listCI[i]);
//              System.out.println(numbers[i]);
//        }
//        System.out.println(listCI[0]);
        input_maloai.setModel(new DefaultComboBoxModel<>(listCI));
        input_timkiemmaloai.setModel(new DefaultComboBoxModel<>(listCI));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableSanPham;
    private javax.swing.JButton btn_huytimkiemsanpham;
    private javax.swing.JButton btn_luusanpham;
    private javax.swing.JButton btn_resetsanpham;
    private javax.swing.JButton btn_suasanpham;
    private javax.swing.JButton btn_themsanpham;
    private javax.swing.JButton btn_timkiemsanpham;
    private javax.swing.JButton btn_xoasanpham;
    private GUI.Components.ClockGUI clockGUI1;
    private GUI.Components.Header header1;
    private javax.swing.JTextField input_gia;
    private com.toedter.calendar.JDateChooser input_hansudung;
    private javax.swing.JTextField input_hinh;
    private javax.swing.JComboBox<String> input_maloai;
    private javax.swing.JTextField input_masanpham;
    private javax.swing.JTextArea input_mota;
    private javax.swing.JTextField input_noiban;
    private javax.swing.JTextField input_soluong;
    private javax.swing.JTextField input_ten;
    private javax.swing.JTextField input_timkiemma;
    private javax.swing.JComboBox<String> input_timkiemmaloai;
    private javax.swing.JTextField input_timkiemten;
    private javax.swing.JComboBox<String> input_timkiemtinhtrang;
    private javax.swing.JComboBox<String> input_tinhtrang;
    private javax.swing.JTextField input_trongluong;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
